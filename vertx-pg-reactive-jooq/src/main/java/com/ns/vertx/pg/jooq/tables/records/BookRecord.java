/*
 * This file is generated by jOOQ.
 */
package com.ns.vertx.pg.jooq.tables.records;


import com.ns.vertx.pg.jooq.tables.Book;
import com.ns.vertx.pg.jooq.tables.interfaces.IBook;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements VertxPojo, Record5<Long, String, Double, Integer, Boolean>, IBook {

    private static final long serialVersionUID = -51183049;

    /**
     * Setter for <code>public.book.book_id</code>.
     */
    @Override
    public BookRecord setBookId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.book.book_id</code>.
     */
    @Override
    public Long getBookId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.book.title</code>.
     */
    @Override
    public BookRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.book.title</code>.
     */
    @Override
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.book.price</code>.
     */
    @Override
    public BookRecord setPrice(Double value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.book.price</code>.
     */
    @Override
    public Double getPrice() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>public.book.amount</code>.
     */
    @Override
    public BookRecord setAmount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.book.amount</code>.
     */
    @Override
    public Integer getAmount() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.book.is_deleted</code>.
     */
    @Override
    public BookRecord setIsDeleted(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.book.is_deleted</code>.
     */
    @Override
    public Boolean getIsDeleted() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, Double, Integer, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, Double, Integer, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Book.BOOK.BOOK_ID;
    }

    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<Double> field3() {
        return Book.BOOK.PRICE;
    }

    @Override
    public Field<Integer> field4() {
        return Book.BOOK.AMOUNT;
    }

    @Override
    public Field<Boolean> field5() {
        return Book.BOOK.IS_DELETED;
    }

    @Override
    public Long component1() {
        return getBookId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public Double component3() {
        return getPrice();
    }

    @Override
    public Integer component4() {
        return getAmount();
    }

    @Override
    public Boolean component5() {
        return getIsDeleted();
    }

    @Override
    public Long value1() {
        return getBookId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public Double value3() {
        return getPrice();
    }

    @Override
    public Integer value4() {
        return getAmount();
    }

    @Override
    public Boolean value5() {
        return getIsDeleted();
    }

    @Override
    public BookRecord value1(Long value) {
        setBookId(value);
        return this;
    }

    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value3(Double value) {
        setPrice(value);
        return this;
    }

    @Override
    public BookRecord value4(Integer value) {
        setAmount(value);
        return this;
    }

    @Override
    public BookRecord value5(Boolean value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public BookRecord values(Long value1, String value2, Double value3, Integer value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IBook from) {
        setBookId(from.getBookId());
        setTitle(from.getTitle());
        setPrice(from.getPrice());
        setAmount(from.getAmount());
        setIsDeleted(from.getIsDeleted());
    }

    @Override
    public <E extends IBook> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(Long bookId, String title, Double price, Integer amount, Boolean isDeleted) {
        super(Book.BOOK);

        set(0, bookId);
        set(1, title);
        set(2, price);
        set(3, amount);
        set(4, isDeleted);
    }

    public BookRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
