/*
 * This file is generated by jOOQ.
 */
package com.ns.vertx.pg.jooq.tables.records;


import com.ns.vertx.pg.jooq.tables.Role;
import com.ns.vertx.pg.jooq.tables.interfaces.IRole;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements VertxPojo, Record2<Long, String>, IRole {

    private static final long serialVersionUID = 1435571681;

    /**
     * Setter for <code>public.role.role_id</code>.
     */
    @Override
    public RoleRecord setRoleId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.role.role_id</code>.
     */
    @Override
    public Long getRoleId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.role.name</code>.
     */
    @Override
    public RoleRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.role.name</code>.
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Role.ROLE.ROLE_ID;
    }

    @Override
    public Field<String> field2() {
        return Role.ROLE.NAME;
    }

    @Override
    public Long component1() {
        return getRoleId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long value1() {
        return getRoleId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public RoleRecord value1(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RoleRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoleRecord values(Long value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRole from) {
        setRoleId(from.getRoleId());
        setName(from.getName());
    }

    @Override
    public <E extends IRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(Long roleId, String name) {
        super(Role.ROLE);

        set(0, roleId);
        set(1, name);
    }

    public RoleRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
