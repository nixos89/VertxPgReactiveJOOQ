/*
 * This file is generated by jOOQ.
 */
package com.ns.vertx.pg.jooq.tables.records;


import com.ns.vertx.pg.jooq.tables.Users;
import com.ns.vertx.pg.jooq.tables.interfaces.IUsers;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements VertxPojo, Record7<Long, String, String, String, String, String, Integer>, IUsers {

    private static final long serialVersionUID = 1135524646;

    /**
     * Setter for <code>public.users.user_id</code>.
     */
    @Override
    public UsersRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users.user_id</code>.
     */
    @Override
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users.first_name</code>.
     */
    @Override
    public UsersRecord setFirstName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users.first_name</code>.
     */
    @Override
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users.last_name</code>.
     */
    @Override
    public UsersRecord setLastName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users.last_name</code>.
     */
    @Override
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users.email</code>.
     */
    @Override
    public UsersRecord setEmail(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users.email</code>.
     */
    @Override
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users.username</code>.
     */
    @Override
    public UsersRecord setUsername(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users.username</code>.
     */
    @Override
    public String getUsername() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.users.password</code>.
     */
    @Override
    public UsersRecord setPassword(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users.password</code>.
     */
    @Override
    public String getPassword() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users.role_id</code>.
     */
    @Override
    public UsersRecord setRoleId(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users.role_id</code>.
     */
    @Override
    public Integer getRoleId() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, String, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, String, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return Users.USERS.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Users.USERS.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.USERNAME;
    }

    @Override
    public Field<String> field6() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Integer> field7() {
        return Users.USERS.ROLE_ID;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getUsername();
    }

    @Override
    public String component6() {
        return getPassword();
    }

    @Override
    public Integer component7() {
        return getRoleId();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getUsername();
    }

    @Override
    public String value6() {
        return getPassword();
    }

    @Override
    public Integer value7() {
        return getRoleId();
    }

    @Override
    public UsersRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UsersRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UsersRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersRecord value6(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value7(Integer value) {
        setRoleId(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IUsers from) {
        setUserId(from.getUserId());
        setFirstName(from.getFirstName());
        setLastName(from.getLastName());
        setEmail(from.getEmail());
        setUsername(from.getUsername());
        setPassword(from.getPassword());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IUsers> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long userId, String firstName, String lastName, String email, String username, String password, Integer roleId) {
        super(Users.USERS);

        set(0, userId);
        set(1, firstName);
        set(2, lastName);
        set(3, email);
        set(4, username);
        set(5, password);
        set(6, roleId);
    }

    public UsersRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
