<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>vertx-pg-reactive</groupId>
	<artifactId>vertx-pg-reactive-jooq</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<description>VertX implementation using Reactive PostgresSQL Client with vertx-jOOQ queries</description>

	<properties>
		<vertx.version>3.9.0</vertx.version>
		<main.verticle>com.ns.vertx.pg.MainVerticle</main.verticle>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jooq.version>3.13.1</jooq.version>
		<vertx-jooq-classic-reactive.version>5.1.1</vertx-jooq-classic-reactive.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.vertx</groupId>
				<artifactId>vertx-stack-depchain</artifactId>
				<version>${vertx.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-config</artifactId>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-pg-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-jdbc-client</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.javatuples</groupId>
			<artifactId>javatuples</artifactId>
			<version>1.2</version>
		</dependency>

		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.jklingsporn</groupId>
			<artifactId>vertx-jooq-classic-reactive</artifactId>
			<version>${vertx-jooq-classic-reactive.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<useIncrementalCompilation>false</useIncrementalCompilation>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>io.vertx.core.Launcher</Main-Class>
										<Main-Verticle>${main.verticle}</Main-Verticle>
									</manifestEntries>
								</transformer>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
								</transformer>
							</transformers>
							<artifactSet>
							</artifactSet>
							<outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<mainClass>io.vertx.core.Launcher</mainClass>
					<systemProperties>
						<systemProperty>
							<key>hsqldb.reconfig_logging</key>
							<value>false</value>
						</systemProperty>
					</systemProperties>
					<arguments>
						<argument>run</argument>
						<argument>${main.verticle}</argument>
					</arguments>
				</configuration>
			</plugin>

			<!-- ================================================ -->
			<!-- Plug-in for "VertX-JOOQ-Classic-Reactive"::START -->
			<plugin>
				<!-- Specify the maven code generator plugin -->
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>

				<!-- The plugin should hook into the generate goal -->
				<executions>
					<execution>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>42.2.2</version>
					</dependency>
					<dependency>
						<groupId>io.github.jklingsporn</groupId>
						<artifactId>vertx-jooq-generate</artifactId>
						<version>${vertx-jooq-classic-reactive.version}</version>
					</dependency>
				</dependencies>

				<!-- Specify the plugin configuration. The configuration format is the same as for the standalone code generator -->
				<configuration>
					<!-- JDBC connection parameters -->
					<jdbc>
						<driver>org.postgresql.Driver</driver>
						<url>jdbc:postgresql://localhost:5432/vertx-jooq-cr</url> 
						<user>postgres</user>
						<password>postgres</password>
					</jdbc>


					<!-- Adding new generator for being able to access JavaGenerator class -->
<!-- 					<generator> -->
<!-- 						TODO: include plain jOOQ Code generator in order to be able to extend JavaGenerator class -->
<!-- 						<name>org.jooq.codegen.JavaGenerator</name> -->
<!-- 					</generator> -->

					<!-- Generator parameters -->
					<generator>
						<!-- The default code generator. You can override this one, to generate your own code style.
					         Supported generators:
					         - org.jooq.codegen.JavaGenerator
					         - org.jooq.codegen.ScalaGenerator
					         Defaults to org.jooq.codegen.JavaGenerator -->					    
						<name>io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator</name>
						<database>
							<name>org.jooq.meta.postgres.PostgresDatabase</name>
							<includes>.*</includes>
							<inputSchema>public</inputSchema>
							<!-- 'outputSchema' commented OUT by NikolaS -->
<!-- 							<outputSchema>public</outputSchema>  -->
<!-- 							<inputCatalog>public</inputCatalog> added by NikolaS -->
							<unsignedTypes>false</unsignedTypes>
							<forcedTypes>
								<!-- Convert tinyint to boolean -->
								<forcedType>
									<name>BOOLEAN</name>
									<includeTypes>(?i:TINYINT)</includeTypes>
									<nullability>ALL</nullability>
									<objectType>ALL</objectType>
								</forcedType>
								<!-- Convert varchar column with name 'someJsonObject' to a io.vertx.core.json.JsonObject -->
								<forcedType>
									<userType>io.vertx.core.json.JsonObject</userType>
									<converter>io.github.jklingsporn.vertx.jooq.shared.JsonObjectConverter</converter>
									<includeExpression>someJsonObject</includeExpression>
									<includeTypes>.*</includeTypes>
									<nullability>ALL</nullability>
									<objectType>ALL</objectType>
								</forcedType>
								<!-- Convert varchar column with name 'someJsonArray' to a io.vertx.core.json.JsonArray -->
								<forcedType>
									<userType>io.vertx.core.json.JsonArray</userType>
									<converter>io.github.jklingsporn.vertx.jooq.shared.JsonArrayConverter</converter>
									<includeExpression>someJsonArray</includeExpression>
									<includeTypes>.*</includeTypes>
									<nullability>ALL</nullability>
									<objectType>ALL</objectType>
								</forcedType>
							</forcedTypes>
							<dateAsTimestamp>true</dateAsTimestamp>
							<recordTimestampFields>REC_TIMESTAMP</recordTimestampFields>							
						</database>
						<target>
							<!-- This is where jOOQ will put your files -->
							<packageName>com.ns.vertx.pg.jooq</packageName>
							<directory>${project.basedir}/src/main/java</directory> <!-- YOUR_TARGET_DIRECTORY_HERE -->
						</target>
						<generate>
							<interfaces>true</interfaces>
							<daos>true</daos>
							<fluentSetters>true</fluentSetters>
<!-- 							<javaTimeTypes>true</javaTimeTypes> added because of Timestamp type for order_date field -->
						</generate>

						<strategy>
							<name>io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy</name>
						</strategy>
					</generator>
					
					
					
					
				</configuration>
			</plugin>
			<!-- Plug-in for "VertX-JOOQ-Classic-Reactive"::END -->
			<!-- ============================================== -->

		</plugins>
	</build>


</project>